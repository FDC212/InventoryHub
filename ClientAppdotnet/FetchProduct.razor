@page "/api/productlist"

<h3>Product List</h3>

<ul>
    @if (products != null)
    {
        foreach (var product in products)
        {
            <li>@product.Name - $@product.Price</li>
        }
    }
    else if (errorMessage != null)
    {
        <li>@errorMessage</li>
    }
    else
    {
        <li>Loading...</li>
    }
</ul>

@code {
    private Product[]? products;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Create an HttpClient instance
            using var httpClient = new HttpClient
            {
                Timeout = TimeSpan.FromSeconds(10) // Set a timeout for the request
            };

            // Call the /api/products endpoint
            var response = await httpClient.GetAsync("https://your-api-url/api/products");

            // Check if the response is successful
            if (response.IsSuccessStatusCode)
            {
                // Read the response content as a JSON string
                var jsonResponse = await response.Content.ReadAsStringAsync();

                // Deserialize the JSON response into the Product array
                products = System.Text.Json.JsonSerializer.Deserialize<Product[]>(jsonResponse, new System.Text.Json.JsonSerializerOptions
                {
                    PropertyNameCaseInsensitive = true
                });
            }
            else
            {
                // Handle non-successful status codes
                errorMessage = $"Error: Unable to fetch products (Status Code: {response.StatusCode})";
            }
        }
        catch (TaskCanceledException)
        {
            // Handle timeout exceptions
            errorMessage = "Error: The request timed out. Please try again later.";
        }
        catch (Exception ex)
        {
            // Handle other exceptions
            errorMessage = $"Error: An unexpected error occurred. {ex.Message}";
        }
    }
}